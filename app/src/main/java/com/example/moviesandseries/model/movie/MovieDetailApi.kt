package com.example.moviesandseries.model.movie

import com.example.moviesandseries.domain.Collection
import com.example.moviesandseries.domain.ProductionCompany
import com.example.moviesandseries.domain.ProductionCountry
import com.example.moviesandseries.domain.movie.Movie
import com.example.moviesandseries.model.GenreApi
import com.example.moviesandseries.model.ProductionCompanyApi
import com.example.moviesandseries.model.ProductionCountryApi
import com.example.moviesandseries.model.SpokenLanguageApi
import com.example.moviesandseries.model.asDomainObject
import com.example.moviesandseries.model.collection.CollectionIndexApi
import com.example.moviesandseries.model.collection.asDomainObject
import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * API representation of detailed movie information.
 *
 * @property adult Indicates if the movie is intended for an adult audience.
 * @property backdropPath The path to the backdrop image of the movie.
 * @property belongsToCollection Information about the collection to which the movie belongs.
 * @property budget The budget of the movie.
 * @property genres List of genre API representations associated with the movie.
 * @property homepage The homepage URL of the movie.
 * @property id The unique identifier of the movie.
 * @property imdbId The IMDb ID of the movie.
 * @property originalLanguage The original language of the movie.
 * @property originalTitle The original title of the movie.
 * @property overview A brief overview or synopsis of the movie.
 * @property popularity The popularity score of the movie.
 * @property posterPath The path to the poster image of the movie.
 * @property productionCompanies List of production company API representations associated with the movie.
 * @property productionCountries List of production country API representations associated with the movie.
 * @property releaseDate The release date of the movie.
 * @property revenue The revenue generated by the movie.
 * @property runtime The runtime of the movie in minutes.
 * @property spokenLanguages List of spoken language API representations associated with the movie.
 * @property status The status of the movie (e.g., "Released", "In Production").
 * @property tagline The tagline or slogan of the movie.
 * @property title The title of the movie.
 * @property video Indicates if the movie has a video.
 * @property voteAverage The average vote score of the movie.
 * @property voteCount The total number of votes received by the movie.
 */
@JsonClass(generateAdapter = true)
data class MovieDetailApi(
    @Json(name = "adult")
    val adult: Boolean,
    @Json(name = "backdrop_path")
    val backdropPath: String,
    @Json(name = "belongs_to_collection")
    val belongsToCollection: CollectionIndexApi?,
    @Json(name = "budget")
    val budget: Int,
    @Json(name = "genres")
    val genres: List<GenreApi>,
    @Json(name = "homepage")
    val homepage: String?,
    @Json(name = "id")
    val id: Int,
    @Json(name = "imdb_id")
    val imdbId: String,
    @Json(name = "original_language")
    val originalLanguage: String,
    @Json(name = "original_title")
    val originalTitle: String,
    @Json(name = "overview")
    val overview: String,
    @Json(name = "popularity")
    val popularity: Double,
    @Json(name = "poster_path")
    val posterPath: String,
    @Json(name = "production_companies")
    val productionCompanies: List<ProductionCompanyApi?>,
    @Json(name = "production_countries")
    val productionCountries: List<ProductionCountryApi?>,
    @Json(name = "release_date")
    val releaseDate: String,
    @Json(name = "revenue")
    val revenue: Int?,
    @Json(name = "runtime")
    val runtime: Int,
    @Json(name = "spoken_languages")
    val spokenLanguages: List<SpokenLanguageApi>,
    @Json(name = "status")
    val status: String,
    @Json(name = "tagline")
    val tagline: String,
    @Json(name = "title")
    val title: String,
    @Json(name = "video")
    val video: Boolean,
    @Json(name = "vote_average")
    val voteAverage: Double,
    @Json(name = "vote_count")
    val voteCount: Int,
)

/**
 * Extension function to convert [MovieDetailApi] to [Movie] domain object.
 */
fun MovieDetailApi.asDomainObject(): Movie {
    return Movie(
        adult = adult,
        backdropPath = backdropPath,
        belongsToCollection = belongsToCollection?.asDomainObject() ?: Collection(),
        budget = budget,
        genres = genres.map { it.asDomainObject() },
        homepage = homepage ?: "",
        id = id,
        imdbId = imdbId,
        originalLanguage = originalLanguage,
        originalTitle = originalTitle,
        overview = overview,
        popularity = popularity,
        posterPath = posterPath,
        productionCompanies = productionCompanies.map { it?.asDomainObject() ?: ProductionCompany() },
        productionCountries = productionCountries.map { it?.asDomainObject() ?: ProductionCountry() },
        releaseDate = releaseDate,
        revenue = revenue ?: 0,
        runtime = runtime,
        spokenLanguages = spokenLanguages.map { it.asDomainObject() },
        status = status,
        tagline = tagline,
        title = title,
        video = video,
        voteAverage = voteAverage,
        voteCount = voteCount,
    )
}
