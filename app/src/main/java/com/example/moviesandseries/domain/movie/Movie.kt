package com.example.moviesandseries.domain.movie

import com.example.moviesandseries.domain.Collection
import com.example.moviesandseries.domain.Genre
import com.example.moviesandseries.domain.MediaIndex
import com.example.moviesandseries.domain.ProductionCompany
import com.example.moviesandseries.domain.ProductionCountry
import com.example.moviesandseries.domain.SpokenLanguage

/**
 * Data class representing a movie.
 *
 * @property adult Indicates if the movie is for adults.
 * @property backdropPath The path to the backdrop image.
 * @property belongsToCollection The collection to which the movie belongs.
 * @property budget The budget of the movie.
 * @property genres List of genres associated with the movie.
 * @property homepage The homepage of the movie.
 * @property id The unique identifier for the movie.
 * @property imdbId The IMDb identifier for the movie.
 * @property originalLanguage The original language of the movie.
 * @property originalTitle The original title of the movie.
 * @property overview A brief overview or summary of the movie.
 * @property popularity The popularity score of the movie.
 * @property posterPath The path to the poster image.
 * @property productionCompanies List of production companies involved in the movie.
 * @property productionCountries List of production countries for the movie.
 * @property releaseDate The release date of the movie.
 * @property revenue The revenue generated by the movie.
 * @property runtime The duration of the movie in minutes.
 * @property spokenLanguages List of spoken languages in the movie.
 * @property status The status of the movie (e.g., Released).
 * @property tagline The tagline associated with the movie.
 * @property title The title of the movie.
 * @property video Indicates if the movie has video content.
 * @property voteAverage The average vote score for the movie.
 * @property voteCount The total number of votes received by the movie.
 * @property isFavorite Indicates if the movie is marked as a favorite.
 */
data class Movie(
    var adult: Boolean = false,
    var backdropPath: String = "",
    var belongsToCollection: Collection = Collection(),
    var budget: Int = 0,
    var genres: List<Genre> = listOf(),
    var homepage: String = "",
    var id: Int = 0,
    var imdbId: String = "",
    var originalLanguage: String = "",
    var originalTitle: String = "",
    var overview: String = "",
    var popularity: Double = 0.0,
    var posterPath: String = "",
    var productionCompanies: List<ProductionCompany> = listOf(),
    var productionCountries: List<ProductionCountry> = listOf(),
    var releaseDate: String = "",
    var revenue: Int = 0,
    var runtime: Int = 0,
    var spokenLanguages: List<SpokenLanguage> = listOf(),
    var status: String = "",
    var tagline: String = "",
    var title: String = "",
    var video: Boolean = false,
    var voteAverage: Double = 0.0,
    var voteCount: Int = 0,
    var isFavorite: Boolean = false,
)

/**
 * Extension function to convert a [Movie] object into a [MediaIndex] object.
 *
 * @return The [MediaIndex] object representing the movie.
 */
fun Movie.asMediaIndexObject(): MediaIndex {
    return MediaIndex(
        adult = adult,
        backdropPath = backdropPath,
        genreIds = genres.map { it.id },
        id = id,
        originalLanguage = originalLanguage,
        originalTitle = originalTitle,
        overview = overview,
        popularity = popularity,
        posterPath = posterPath,
        releaseDate = releaseDate,
        title = title,
        video = video,
        voteAverage = voteAverage,
        voteCount = voteCount,
        originCountry = null,
        mediaType = "movie",
        isFavorite = this.isFavorite,
    )
}
